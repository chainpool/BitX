{
    "version": 3,
    "sources": [
        "routes/CreateAccount/KnowAbout.module.scss",
        "routes/AccountDetail/AccountReceive.module.scss",
        "components/RouterGo/index.module.scss",
        "resources/Bitx.png",
        "routes/CreateAccount/index.module.scss",
        "routes/App/CommonLayOut/warning.module.scss",
        "routes/AccountDetail/index.module.scss",
        "routes/ImportAccount/ImportMnemonicOrSecret.module.scss",
        "routes/AccountList/index.module.scss",
        "routes/AccountDetail/AccountSend.module.scss",
        "utils/ipc.js",
        "constants/index.js",
        "utils/patterns.js",
        "utils/bitJS.js",
        "utils/request.js",
        "utils/index.js",
        "components/Mixin/index.js",
        "components/RouterGo/index.js",
        "components/Input/index.js",
        "components/Clipboard/index.js",
        "components/Tooltip/index.js",
        "service/index.js",
        "store/actions/index.js",
        "components/Modal/index.js",
        "routes/AccountList/SelectModeGetAccount.js",
        "routes/AccountList/index.js",
        "routes/CreateAccount/KnowAbout.js",
        "routes/CreateAccount/SaveMnemonic.js",
        "routes/CreateAccount/CheckMnemonic.js",
        "routes/Components/SetPassword.js",
        "routes/Components/SignModal.js",
        "routes/CreateAccount/index.js",
        "routes/ImportAccount/ImportMnemonic.js",
        "routes/ImportAccount/ImportSecretKey.js",
        "routes/ImportAccount/index.js",
        "routes/AccountDetail/AccountInfo.js",
        "routes/AccountDetail/ExportKey.js",
        "routes/AccountDetail/DeleteAccount.js",
        "routes/AccountDetail/InputPassword.js",
        "routes/AccountDetail/ViewPrivateKey.js",
        "routes/AccountDetail/AccountSend.js",
        "routes/AccountDetail/AccountReceive.js",
        "routes/AccountDetail/SendOrReceive.js",
        "routes/AccountDetail/index.js",
        "routes/App/routers.js",
        "routes/App/CommonLayOut/Warning.js",
        "routes/App/CommonLayOut/Header.js",
        "routes/App/CommonLayOut/index.js",
        "routes/App/index.js",
        "serviceWorker.js",
        "store/reducers/account.js",
        "store/reducers/mnemonic.js",
        "store/reducers/utxo.js",
        "store/reducers/pageTitle.js",
        "store/reducers/modal.js",
        "store/reducers/goBack.js",
        "store/reducers/network.js",
        "store/reducers/menu.js",
        "store/reducers/app.js",
        "store/index.js",
        "index.js",
        "components/Input/index.module.scss",
        "routes/CreateAccount/CheckMnemonic.module.scss",
        "utils/bitX.js",
        "components/Modal/index.module.scss",
        "routes/AccountList/SelectModeGetAccount.module.scss",
        "routes/AccountDetail/InputPassword.module.scss",
        "components/Tooltip/index.module.scss",
        "routes/Components/SetPassword.module.scss",
        "routes/Components/SignModal.module.scss",
        "routes/AccountDetail/AccountInfo.module.scss",
        "components/Detail/bitcoin.js",
        "components/Clipboard/index.module.scss",
        "routes/CreateAccount/SaveMnemonic.module.scss",
        "routes/ImportAccount/index.module.scss",
        "routes/App/CommonLayOut/Header.module.scss",
        "routes/App/CommonLayOut/index.module.scss"
    ],
    "names": [
        "module",
        "exports",
        "KnowAbout",
        "content",
        "AccountReceive",
        "desc",
        "url",
        "__webpack_require__",
        "p",
        "CreateAccount",
        "wrapper",
        "AccountDetail",
        "selectmode",
        "active",
        "modalWrapper",
        "title",
        "menu",
        "export_key",
        "private_key",
        "warning",
        "ImportMnemonic",
        "generatewords",
        "errwarn",
        "AccountList",
        "listtitle",
        "seperate",
        "badge",
        "name",
        "amount",
        "address",
        "AccountSend",
        "userInput",
        "addreturn",
        "returncontent",
        "input",
        "ASCII",
        "label",
        "button",
        "ipcRenderer",
        "PATH",
        "home",
        "createaccount",
        "importaccount",
        "accountdetail",
        "window",
        "require",
        "ipc",
        "Patterns",
        "required",
        "value",
        "errMsg",
        "arguments",
        "length",
        "undefined",
        "equal",
        "value1",
        "value2",
        "strictEqual",
        "smaller",
        "inputValue",
        "baseValue",
        "isNaN",
        "Number",
        "smallerOrEqual",
        "characterLength",
        "minLength",
        "maxLength",
        "result",
        "concat",
        "isBTCAddress",
        "WAValidator",
        "validate",
        "isValidMnemonic",
        "bip39",
        "validateMnemonic",
        "isValidPrivateKey",
        "network",
        "bitcoin",
        "networks",
        "testnet",
        "test",
        "ECPair",
        "fromWIF",
        "_unused",
        "isValidPassword",
        "encryptedKey",
        "password",
        "bip38",
        "decrypt",
        "N",
        "r",
        "e",
        "check",
        "apply",
        "bitJS",
        "generateMnemonic",
        "sendSync",
        "bitX",
        "generateAccount",
        "payload",
        "JSON",
        "parse",
        "saveAccount",
        "accounts",
        "send",
        "stringify",
        "localSave",
        "set",
        "getAccount",
        "get",
        "sign",
        "_len",
        "Array",
        "_key",
        "_len2",
        "_key2",
        "update",
        "forceUpdate",
        "on",
        "confirm",
        "arg",
        "fetchFromHttp",
        "_ref",
        "_ref$method",
        "method",
        "methodAlias",
        "_ref$params",
        "params",
        "body",
        "_ref$timeOut",
        "timeOut",
        "rest",
        "Object",
        "objectWithoutProperties",
        "id",
        "uniqid",
        "message",
        "jsonrpc",
        "request",
        "fetch",
        "objectSpread",
        "headers",
        "Accept",
        "Content-Type",
        "toUpperCase",
        "then",
        "_ref2",
        "asyncToGenerator",
        "regenerator_default",
        "a",
        "mark",
        "_callee",
        "res",
        "wrap",
        "_context",
        "prev",
        "next",
        "status",
        "abrupt",
        "json",
        "sent",
        "Promise",
        "reject",
        "stop",
        "_x",
        "this",
        "catch",
        "err",
        "race",
        "resovle",
        "setTimeout",
        "isEmpty",
        "isFunction",
        "fun",
        "isString",
        "key",
        "store",
        "remove",
        "clearAll",
        "formatNumber",
        "toPrecision",
        "precision",
        "multiplication",
        "BigNumber",
        "multipliedBy",
        "Math",
        "pow",
        "toFixed",
        "dividedBy",
        "toBtcPrecision",
        "setBlankSpace",
        "unit",
        "Device",
        "isMobile",
        "device",
        "mobile",
        "isDesktop",
        "desktop",
        "Mixin",
        "props",
        "_this",
        "classCallCheck",
        "possibleConstructorReturn",
        "getPrototypeOf",
        "call",
        "openModal",
        "data",
        "setModal",
        "show",
        "closeModal",
        "cb",
        "changeState",
        "callback",
        "_isMounted",
        "setState",
        "_this2",
        "pageTitle",
        "setPageTitle",
        "state",
        "step",
        "setGoBack",
        "history",
        "goBack",
        "startInit",
        "Component",
        "RouterGo",
        "withRouter",
        "_this$props",
        "children",
        "_this$props$Ele",
        "Ele",
        "_this$props$go",
        "go",
        "_this$props$go2",
        "pathname",
        "className",
        "_this$props$isOutSide",
        "isOutSide",
        "onClick",
        "react_default",
        "createElement",
        "styles",
        "rel",
        "href",
        "target",
        "event",
        "shell",
        "electron",
        "preventDefault",
        "openExternal",
        "style",
        "cursor",
        "push",
        "routerGo",
        "PureComponent",
        "Input",
        "_Component",
        "inherits",
        "createClass",
        "onChange",
        "onBlur",
        "prefix",
        "suffix",
        "placeholder",
        "isPassword",
        "isTextArea",
        "assign",
        "classnames",
        "type",
        "trim",
        "Clipboard",
        "useEffect",
        "clipBoard",
        "ClipboardJS",
        "destroy",
        "uid",
        "width",
        "classNames",
        "Tooltip_Tooltip",
        "tip",
        "data-clipboard-target",
        "marginLeft",
        "Tooltip",
        "_this$props$type",
        "_this$props$size",
        "size",
        "_this$props$offset",
        "offset",
        "_this$props$place",
        "place",
        "_this$props$tip",
        "Fragment",
        "data-for",
        "data-tip",
        "dist_default",
        "effect",
        "multiline",
        "stopPropagation",
        "ReactTooltip",
        "document",
        "getElementById",
        "isCapture",
        "delayShow",
        "afterShow",
        "hide",
        "submitEndpoint",
        "getBalance",
        "_getBalance",
        "addr",
        "_args",
        "getUtxos",
        "_x2",
        "_getUtxos",
        "_callee2",
        "_args2",
        "_context2",
        "broadcastTx",
        "_x3",
        "_broadcastTx",
        "_callee3",
        "tx",
        "_args3",
        "_context3",
        "raw",
        "updateAccountBalance",
        "account",
        "modal",
        "getAllAccountBalance",
        "_ref3",
        "dispatch",
        "getState",
        "_getState",
        "_iteratorNormalCompletion",
        "_didIteratorError",
        "_iteratorError",
        "_iterator",
        "_step",
        "Symbol",
        "iterator",
        "done",
        "updateBalance",
        "t0",
        "return",
        "finish",
        "_callee4",
        "_context4",
        "findOne",
        "balanceShow",
        "confirmed",
        "setNetwork",
        "Modal",
        "closeCb",
        "useSelector",
        "useDispatch",
        "SelectModeGetAccount",
        "_useState",
        "useState",
        "_useState2",
        "slicedToArray",
        "isCreate",
        "setIsCreate",
        "_useState3",
        "_useState4",
        "openNetworkSelection",
        "setOpenNetworkSelection",
        "changeClose",
        "_props$accounts",
        "alt",
        "src",
        "BitX",
        "height",
        "components_RouterGo",
        "close",
        "setClose",
        "map",
        "item",
        "index",
        "search",
        "AccountList_SelectModeGetAccount",
        "changeStep",
        "SaveMnemonic",
        "mnemonic",
        "CheckMnemonic",
        "checkAll",
        "checkUserInput",
        "_this$state$userInput",
        "join",
        "userInputErrMsg",
        "every",
        "mnemonicSort",
        "split",
        "sort",
        "b",
        "random",
        "_this$state",
        "getPostion",
        "findIndex",
        "prevState",
        "splice",
        "SetPassword",
        "nameErrMsg",
        "passwordErrMsg",
        "confirmPassword",
        "confirmPasswordErrMsg",
        "checkName",
        "checkPassword",
        "checkEqual",
        "errList",
        "passwordValidator",
        "has",
        "uppercase",
        "lowercase",
        "digits",
        "list",
        "msg",
        "checkConfirmPassword",
        "_this$state2",
        "privateKey",
        "addAccount",
        "networkType",
        "Input_Input",
        "slice",
        "wif",
        "connect",
        "SignModal",
        "hash",
        "_this$props$currentAc",
        "currentAccount",
        "_this$props$modal",
        "_this$props$modal$dat",
        "_this$props$currentAc2",
        "isTestnet",
        "components_Modal",
        "error",
        "KnowAbout_KnowAbout",
        "SaveMnemonic_SaveMnemonic",
        "CheckMnemonic_CheckMnemonic",
        "Components_SetPassword",
        "replace",
        "ImportSecretKey",
        "ImportAccount",
        "activeIndex",
        "ImportMnemonic_ImportMnemonic",
        "ImportAccount_ImportSecretKey",
        "AccountInfo",
        "_props$currentAccount",
        "isTestNet",
        "ExportKey",
        "DeleteAccount",
        "display",
        "alignItems",
        "fontSize",
        "InputPassword",
        "setPassword",
        "setErrMsg",
        "onClose",
        "passwordCallback",
        "ViewPrivateKey",
        "addressErrMsg",
        "amountErrMsg",
        "addOpReturn",
        "hex",
        "hexErrMsg",
        "fee",
        "feeErrMsg",
        "checkAddress",
        "checkAmount",
        "checkAmountAndFee",
        "checkFee",
        "utxos",
        "BTCAmount",
        "feeInSatoshi",
        "enough",
        "checkHex",
        "getAccountUtxos",
        "_this$state3",
        "_this$state4",
        "str",
        "hexString",
        "startsWith",
        "substring",
        "strOut",
        "x",
        "String",
        "fromCharCode",
        "parseInt",
        "substr",
        "hexToAscii",
        "color",
        "rows",
        "_callback",
        "constructTx",
        "Error",
        "SignModal_SignModal",
        "find",
        "AccountAccept",
        "element",
        "useRef",
        "QRious",
        "current",
        "ref",
        "OperationSwitch",
        "setActiveIndex",
        "background",
        "AccountDetail_AccountSend",
        "didMount",
        "prototype",
        "componentDidMount",
        "showMenu",
        "setMenu",
        "getAccountBalance",
        "_this3",
        "deleteAccount",
        "decryptPair",
        "toString",
        "setPrivateKey",
        "_ref4",
        "_x4",
        "routers",
        "component",
        "path",
        "Warning",
        "setSeen",
        "Header",
        "location",
        "_useSelector",
        "goBackMenu",
        "CommonLayOut",
        "_this$props$accounts",
        "_this$props$history$l",
        "app",
        "setSeenWarning",
        "queryString",
        "filter",
        "Switch",
        "Route",
        "exact",
        "render",
        "Redirect",
        "to",
        "seenWarning",
        "App",
        "appProps",
        "setAttribute",
        "Router",
        "HashRouter",
        "BrowserRouter",
        "App_CommonLayOut",
        "Boolean",
        "hostname",
        "match",
        "initialAccounts",
        "saveAccounts",
        "rawAccounts",
        "saveParts",
        "isArray",
        "action",
        "toConsumableArray",
        "clone",
        "appData",
        "combineReducers",
        "newMnemonic",
        "composeEnhancers",
        "__REDUX_DEVTOOLS_EXTENSION_COMPOSE__",
        "compose",
        "createStore",
        "rootReducer",
        "applyMiddleware",
        "thunk",
        "initReactFastclick",
        "ReactDOM",
        "es",
        "routes_App",
        "navigator",
        "serviceWorker",
        "ready",
        "registration",
        "unregister",
        "container",
        "writedesc",
        "warn",
        "allwords",
        "Buffer",
        "d",
        "__webpack_exports__",
        "bip39__WEBPACK_IMPORTED_MODULE_0__",
        "bip39__WEBPACK_IMPORTED_MODULE_0___default",
        "n",
        "bip32__WEBPACK_IMPORTED_MODULE_1__",
        "bip32__WEBPACK_IMPORTED_MODULE_1___default",
        "bip38__WEBPACK_IMPORTED_MODULE_2__",
        "bip38__WEBPACK_IMPORTED_MODULE_2___default",
        "bitcoinjs_lib__WEBPACK_IMPORTED_MODULE_3__",
        "bitcoinjs_lib__WEBPACK_IMPORTED_MODULE_3___default",
        "_components_Detail_bitcoin__WEBPACK_IMPORTED_MODULE_4__",
        "getNetworkKey",
        "seed",
        "mnemonicToSeed",
        "child1",
        "bip32",
        "fromSeed",
        "derivePath",
        "p2pkh",
        "payments",
        "pubkey",
        "publicKey",
        "encrypt",
        "keyPair",
        "fromPrivateKey",
        "from",
        "compressed",
        "changeAddress",
        "targetAddress",
        "opReturnHex",
        "ecpair",
        "Modalcontainer",
        "rootModalDesktop",
        "header",
        "bitx",
        "routerbutton",
        "networkSelection",
        "separator",
        "input_password",
        "top",
        "tool",
        "large",
        "inputcontent",
        "success",
        "watchother",
        "bignumber_js__WEBPACK_IMPORTED_MODULE_0__",
        "bignumber_js__WEBPACK_IMPORTED_MODULE_0___default",
        "bitcoinjs_lib__WEBPACK_IMPORTED_MODULE_1__",
        "bitcoinjs_lib__WEBPACK_IMPORTED_MODULE_1___default",
        "reduce",
        "utxo",
        "filteredUtxos",
        "unspents",
        "nonZeroUnspents",
        "sum",
        "filterUnspentsByAmount",
        "txb",
        "TransactionBuilder",
        "setVersion",
        "_iteratorNormalCompletion2",
        "_didIteratorError2",
        "_iteratorError2",
        "_step2",
        "_iterator2",
        "addInput",
        "mintTxid",
        "mintIndex",
        "addOutput",
        "change",
        "embed",
        "output",
        "forEach",
        "build",
        "toHex",
        "clipboard",
        "ellipse",
        "back"
    ],
    "mappings": "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",
    "file": "static/js/main.a3959dfd.chunk.js",
    "sourcesContent": [
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"KnowAbout\":\"KnowAbout_KnowAbout__2632J\",\"content\":\"KnowAbout_content__3ELhE\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccountReceive\":\"AccountReceive_AccountReceive__1lIaP\",\"desc\":\"AccountReceive_desc__3K_de\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"url\":\"RouterGo_url__18SS2\"};",
        "module.exports = __webpack_public_path__ + \"static/media/Bitx.41fc5ea2.png\";",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateAccount\":\"CreateAccount_CreateAccount__Lrx00\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"warning_wrapper__1YjSX\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccountDetail\":\"AccountDetail_AccountDetail__zADpZ\",\"content\":\"AccountDetail_content__2gECl\",\"selectmode\":\"AccountDetail_selectmode__35O3K\",\"active\":\"AccountDetail_active__3jV8d\",\"modalWrapper\":\"AccountDetail_modalWrapper__3kdCs\",\"title\":\"AccountDetail_title__1-_ml\",\"menu\":\"AccountDetail_menu__1Pmz1\",\"export_key\":\"AccountDetail_export_key__eYv0y\",\"private_key\":\"AccountDetail_private_key__39U7E\",\"warning\":\"AccountDetail_warning__2Mlcb\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImportMnemonic\":\"ImportMnemonicOrSecret_ImportMnemonic__2krIe\",\"desc\":\"ImportMnemonicOrSecret_desc__26Rhe\",\"generatewords\":\"ImportMnemonicOrSecret_generatewords__3z2L1\",\"errwarn\":\"ImportMnemonicOrSecret_errwarn__1lpB7\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccountList\":\"AccountList_AccountList__3U8YL\",\"listtitle\":\"AccountList_listtitle__2KiWx\",\"seperate\":\"AccountList_seperate__OuUSy\",\"desc\":\"AccountList_desc__3l4EO\",\"title\":\"AccountList_title__3uWkq\",\"badge\":\"AccountList_badge__3Cjr9\",\"name\":\"AccountList_name__ensnV\",\"amount\":\"AccountList_amount__2igYK\",\"address\":\"AccountList_address__3tP2j\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccountSend\":\"AccountSend_AccountSend__S9Kg2\",\"userInput\":\"AccountSend_userInput__20k1k\",\"addreturn\":\"AccountSend_addreturn__c4haL\",\"returncontent\":\"AccountSend_returncontent__29AU1\",\"input\":\"AccountSend_input__VE8wO\",\"ASCII\":\"AccountSend_ASCII__2rBUi\",\"label\":\"AccountSend_label__EM9Bf\",\"button\":\"AccountSend_button__29T7s\",\"warning\":\"AccountSend_warning__2Q2PF\"};",
        "let ipcRenderer;\nif (window.require) {\n  ({ ipcRenderer } = window.require(\"electron\"));\n} else {\n  console.log(\"window.require不存在\");\n}\n\nexport const ipc = ipcRenderer;\n",
        "export const PATH = {\n  home: '/',\n  createaccount: '/createaccount',\n  importaccount: '/importAccount',\n  accountdetail: '/accountdetail',\n};\n",
        "import bip39 from \"bip39\";\nimport bitcoin from \"bitcoinjs-lib\";\nimport bip38 from \"bip38\";\nimport WAValidator from \"wallet-address-validator\";\n\nexport const Patterns = {\n  required: (value, errMsg = \"必填\") => {\n    return !value && value !== 0 ? errMsg : \"\";\n  },\n  equal: (value1, value2, errMsg = \"不相等\") => {\n    if (value1 && value2) {\n      return value1 === value2 ? \"\" : errMsg;\n    }\n    return \"\";\n  },\n  strictEqual: (value1, value2, errMsg = \"不相等\") => {\n    return value1 === value2 ? \"\" : errMsg;\n  },\n  smaller: (inputValue, baseValue, errMsg = \"余额不足\") => {\n    if (!isNaN(baseValue)) {\n      return Number(inputValue) >= Number(baseValue) ? errMsg : \"\";\n    }\n    return errMsg;\n  },\n  smallerOrEqual: (inputValue, baseValue, errMsg = \"余额不足\") => {\n    if (!isNaN(inputValue) && !isNaN(baseValue)) {\n      return Number(inputValue) > Number(baseValue) ? errMsg : \"\";\n    }\n  },\n  characterLength: (inputValue = \"\", minLength, maxLength) => {\n    let result = inputValue.length >= minLength ? \"\" : `最少${minLength}个字符`;\n    result = inputValue.length > maxLength ? `最多${maxLength}个字符` : result;\n    return result;\n  },\n  isBTCAddress: (value, errMsg = \"地址格式错误\") => {\n    return WAValidator.validate(value, \"BTC\", \"test\") ? \"\" : errMsg;\n  },\n  isValidMnemonic: (value, errMsg = \"助记词格式错误\") => {\n    return bip39.validateMnemonic(value) ? \"\" : errMsg;\n  },\n  isValidPrivateKey: (\n    value,\n    network = bitcoin.networks.testnet,\n    errMsg = \"私钥格式错误\"\n  ) => {\n    // 私钥\n    if (/^[\\da-zA-Z]{64}$/.test(value)) {\n      return \"\";\n    }\n\n    // 检查WIF格式\n    try {\n      bitcoin.ECPair.fromWIF(value, network);\n      return \"\";\n    } catch {\n      return errMsg;\n    }\n  },\n  isValidPassword: (encryptedKey, password, errMsg = \"密码错误\") => {\n    try {\n      bip38.decrypt(encryptedKey, password, () => {}, {\n        N: 128,\n        r: 8,\n        p: 8\n      });\n    } catch (e) {\n      return errMsg;\n    }\n  },\n  check: value => {\n    return (...params) => {\n      if (!Patterns[value]) {\n        return console.error(\"check对应的方法必须存在\");\n      }\n      return Patterns[value](...params);\n    };\n  }\n};\n",
        "import { ipc } from \"./ipc\";\nimport { bitX } from \"./bitX\";\nimport { localSave } from \"./index\";\nimport { Patterns } from \"./patterns\";\nimport bitcoin from \"bitcoinjs-lib\";\n\nexport const bitJS = {\n  generateMnemonic: () => {\n    if (ipc) {\n      return ipc.sendSync(\"GENERATE_MNEMONIC\");\n    } else {\n      return bitX.generateMnemonic();\n    }\n  },\n  generateAccount: (payload, network = bitcoin.networks.testnet) => {\n    if (ipc) {\n      return JSON.parse(ipc.sendSync(\"GENERATE_ACCOUNT\", payload));\n    } else {\n      return bitX.generateAccount(payload, network);\n    }\n  },\n  saveAccount: accounts => {\n    if (ipc) {\n      ipc.send(\"SAVE_ACCOUNT\", JSON.stringify(accounts));\n    } else {\n      localSave.set(\"accounts\", accounts);\n    }\n  },\n  getAccount: () => {\n    if (ipc) {\n      return JSON.parse(ipc.sendSync(\"GET_ACCOUNT\"));\n    } else {\n      return localSave.get(\"accounts\");\n    }\n  },\n  sign: (...payload) => {\n    if (ipc) {\n      return ipc.sendSync(\"SIGN\", payload);\n    } else {\n      return bitX.sign(...payload);\n    }\n  },\n  isValidPassword: (...payload) => {\n    if (ipc) {\n      return ipc.sendSync(\"IS_VALID_PASSWORD\", payload);\n    } else {\n      return Patterns.check(\"isValidPassword\")(...payload);\n    }\n  },\n  update: () => {\n    if (ipc) {\n      ipc.send(\"UPDATE\");\n    }\n  },\n  forceUpdate: () => {\n    if (ipc) {\n      ipc.send(\"FORCE_UPDATE\");\n    }\n  }\n};\nif (ipc) {\n  ipc.on(\"isForceUpdate\", () => {\n    const res = window.confirm(\"已下载最新版本，是否立即安装?\");\n    if (res) {\n      bitJS.forceUpdate();\n    }\n  });\n  ipc.on(\"autoUpdater\", (e, arg) => {\n    console.log(arg);\n  });\n}\n",
        "import uniqid from \"uniqid\";\n\nexport const fetchFromHttp = ({\n  url,\n  method = \"POST\",\n  methodAlias,\n  params = [],\n  body,\n  timeOut = 10000,\n  ...rest\n}) => {\n  const id = uniqid();\n  const message = body\n    ? JSON.stringify(body)\n    : JSON.stringify({ id, jsonrpc: \"2.0\", method: methodAlias, params });\n  const request = () =>\n    fetch(url, {\n      method: method,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      ...(method.toUpperCase() === \"GET\" ? {} : { body: message }),\n      ...rest\n    })\n      .then(async res => {\n        if (res.status >= 200 && res.status < 300) {\n          return res.json();\n        } else {\n          const result = await res.json();\n          return Promise.reject({\n            status: res.status,\n            message: result\n          });\n        }\n      })\n      .catch(err => {\n        return Promise.reject(err.message || err);\n      });\n  if (timeOut) {\n    return Promise.race([\n      request(),\n      new Promise((resovle, reject) => {\n        setTimeout(() => {\n          reject(\"请求超时\");\n        }, timeOut);\n      })\n    ]);\n  } else {\n    return request();\n  }\n};\n",
        "import store from \"store\";\nimport { BigNumber } from \"bignumber.js\";\nimport { default as queryString } from \"query-string\";\nimport device from \"current-device\";\n\nexport * from \"./ipc\";\nexport * from \"./bitJS\";\nexport * from \"./patterns\";\nexport * from \"./request\";\n\nexport const isEmpty = value => {\n  return isNaN(value) || value === undefined || value === \"\" || value === {};\n};\nexport const isNumber = value => typeof value === \"number\";\n\nexport const isFunction = fun => typeof fun === \"function\";\n\nexport const isString = value => typeof value === \"string\";\n\nexport const localSave = {\n  get: key => {\n    return store.get(key);\n  },\n  set: (key, value) => {\n    store.set(key, value);\n  },\n  remove: key => {\n    store.remove(key);\n  },\n  clearAll: () => {\n    store.clearAll();\n  }\n};\n\nexport const formatNumber = {\n  toPrecision: (value, precision = 0, multiplication = false) => {\n    precision = Number(precision);\n    if (isEmpty(value) || isEmpty(precision) || isNaN(value)) return \"\";\n    if (multiplication)\n      return new BigNumber(value)\n        .multipliedBy(Math.pow(10, precision))\n        .toFixed(0);\n    return new BigNumber(value)\n      .dividedBy(Math.pow(10, precision))\n      .toFixed(precision);\n  },\n  toBtcPrecision: (value, multiplication = false) => {\n    return formatNumber.toPrecision(value, 8, multiplication);\n  }\n};\n\nexport const setBlankSpace = (value, unit) => {\n  if (isEmpty(value)) return unit;\n  return `${value} ${unit}`;\n};\n\nexport const parseQueryString = payload => {\n  return queryString.parse(payload);\n};\n\nexport const Device = {\n  isMobile: () => device.mobile(),\n  isDesktop: () => device.desktop()\n};\n",
        "import { Component } from \"react\";\nimport { isFunction } from \"../../utils\";\n\nexport default class Mixin extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = true;\n  }\n\n  componentDidMount() {\n    if (this.pageTitle && isFunction(this.props.setPageTitle)) {\n      this.props.setPageTitle(this.pageTitle);\n    }\n    if (this.state && this.state.step && isFunction(this.props.setGoBack)) {\n      this.props.setGoBack(() => {\n        if (this.state.step > 1 && this._isMounted) {\n          this.setState({\n            step: this.state.step - 1\n          });\n        } else if (this.props.history) {\n          this.props.history.goBack();\n        }\n      });\n    }\n    isFunction(this.startInit) && this.startInit();\n  }\n\n  openModal = ({ name, data }) => {\n    if (this.props.setModal) {\n      this.props.setModal({\n        name,\n        data,\n        show: true\n      });\n    } else {\n      console.log(\n        \"this.props.setModal不存在，请把容器组件的setModal传递给当前组件\"\n      );\n    }\n  };\n\n  closeModal = cb => {\n    if (this.props.setModal) {\n      this.props.setModal({\n        name: \"\",\n        data: \"\",\n        show: false\n      });\n    } else {\n      console.log(\n        \"this.props.setModal不存在，请把容器组件的setModal传递给当前组件\"\n      );\n    }\n  };\n\n  changeState = (payload = {}, callback) => {\n    if (this._isMounted) {\n      this.setState(payload, () => {\n        isFunction(callback) && callback(payload);\n      });\n    }\n  };\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n}\n",
        "import React, { PureComponent } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { isNumber, isFunction, ipc } from \"../../utils\";\nimport * as styles from \"./index.module.scss\";\n\n@withRouter\nclass RouterGo extends PureComponent {\n  render() {\n    const {\n      children,\n      history,\n      Ele = \"span\",\n      go = {},\n      go: { pathname } = {},\n      className,\n      isOutSide = false,\n      onClick\n    } = this.props;\n    const routerGo = payload => {\n      if (isNumber(payload)) return history.go(payload);\n      payload && history.push(payload);\n    };\n\n    const url = !/http/.test(pathname) ? `http://${pathname}` : pathname;\n\n    return isOutSide ? (\n      <a\n        className={styles.url}\n        rel=\"noopener noreferrer\"\n        href={url}\n        target=\"_blank\"\n        onClick={event => {\n          if (ipc) {\n            const shell = window.electron.shell;\n            event.preventDefault();\n            shell.openExternal(url);\n          }\n        }}\n      >\n        {children || pathname}\n      </a>\n    ) : (\n      <Ele\n        style={{ cursor: \"pointer\" }}\n        className={className}\n        onClick={() => {\n          routerGo(go);\n          isFunction(onClick) && onClick();\n        }}\n      >\n        {children}\n      </Ele>\n    );\n  }\n}\n\nexport default RouterGo;\n",
        "import React, { Component } from \"react\";\n\nimport * as styles from \"./index.module.scss\";\nimport classnames from \"classnames\";\n\nexport class Input extends Component {\n  render() {\n    const {\n      label,\n      errMsg,\n      value,\n      onChange,\n      onBlur,\n      prefix,\n      suffix,\n      placeholder,\n      isPassword,\n      isTextArea,\n      className,\n      ...rest\n    } = this.props;\n    const Ele = isTextArea ? \"textarea\" : \"input\";\n    return (\n      <div className={styles.container}>\n        {label && <div className={styles.label}>{label}</div>}\n        <div className={styles.content}>\n          {prefix && <div className={styles.prefix}>{prefix}</div>}\n\n          <Ele\n            className={classnames(styles.input, className)}\n            type={isPassword ? \"password\" : \"text\"}\n            placeholder={placeholder}\n            value={value}\n            onChange={e => {\n              onChange(e.target.value.trim());\n            }}\n            onBlur={onBlur}\n            {...rest}\n          />\n          {suffix && <div className={styles.suffix}>{suffix}</div>}\n        </div>\n        <div className={styles.errMsg}>{errMsg}</div>\n      </div>\n    );\n  }\n}\n",
        "import React, { useEffect } from \"react\";\nimport ClipboardJS from \"clipboard\";\nimport classNames from \"classnames\";\nimport { Tooltip } from \"../index\";\nimport uniqid from \"uniqid\";\nimport * as styles from \"./index.module.scss\";\n\nexport default function Clipboard(props) {\n  useEffect(() => {\n    const clipBoard = new ClipboardJS(\".clipboard\");\n\n    return function() {\n      clipBoard.destroy();\n    };\n  }, []);\n\n  const uid = props.id || uniqid(\"clipboard_\");\n\n  const { children, className, width } = props;\n  return (\n    <span className={classNames(styles.clipboard, className)}>\n      <span\n        id={uid}\n        className={classNames(styles.children, width ? styles.ellipse : null)}\n        style={{ width }}\n      >\n        {children}\n      </span>\n      <Tooltip tip=\"复制成功\" type=\"click\">\n        <i\n          className=\"clipboard iconfont iconfuzhi\"\n          data-clipboard-target={`#${uid}`}\n          style={{ marginLeft: children ? 8 : null, cursor: \"pointer\" }}\n        />\n      </Tooltip>\n    </span>\n  );\n}\n",
        "import React, { PureComponent } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport classNames from 'classnames';\nimport { isFunction } from '../../utils';\nimport uniqid from 'uniqid';\nimport * as styles from './index.module.scss';\n\nexport default class Tooltip extends PureComponent {\n  state = {\n    uid: uniqid('tooltip_'),\n  };\n\n  render() {\n    const { uid } = this.state;\n    const {\n      children,\n      onClick,\n      type = 'hover',\n      size = 'middle',\n      offset = {},\n      place = 'bottom',\n      tip = 'tooltip提示',\n    } = this.props;\n\n    return (\n      <>\n        {type === 'hover' ? (\n          <>\n            <span data-for={uid} data-tip={tip} className={styles.tip}>\n              {children}\n            </span>\n            <ReactTooltip\n              effect=\"solid\"\n              offset={offset}\n              multiline\n              id={uid}\n              place={place}\n              className={classNames(styles.tool, styles[size])}>\n              {tip}\n            </ReactTooltip>\n          </>\n        ) : (\n          <>\n            <span id={uid} data-tip={tip} className={styles.tip}>\n              <span\n                onClick={(e) => {\n                  e.stopPropagation();\n                  if (onClick && isFunction(onClick)) {\n                    onClick((tip) => {\n                      tip &&\n                        this.setState(\n                          {\n                            tip,\n                          },\n                          () => {\n                            ReactTooltip.show(document.getElementById(uid));\n                          },\n                        );\n                    });\n                  } else {\n                    ReactTooltip.show(document.getElementById(uid));\n                  }\n                }}>\n                {children}\n              </span>\n            </span>\n\n            <ReactTooltip\n              className={styles.content}\n              event=\"none\"\n              effect=\"solid\"\n              isCapture={true}\n              delayShow={150}\n              afterShow={() => {\n                setTimeout(() => {\n                  ReactTooltip.hide(document.getElementById(uid));\n                }, 500);\n              }}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n",
        "import { fetchFromHttp } from \"../utils\";\n\nconst submitEndpoint = \"https://api.chainx.org/bitx/txs\";\n\nexport async function getBalance(addr, network = \"testnet\") {\n  const url = `https://api.chainx.org/bitx/${network}/${addr}/balance`;\n  return window.fetch(url).then(res => res.json());\n}\n\nexport async function getUtxos(addr, network = \"testnet\") {\n  const url = `https://api.chainx.org/bitx/${network}/${addr}/utxos`;\n  return window.fetch(url).then(res => res.json());\n}\n\nexport async function broadcastTx(tx, network = \"testnet\") {\n  const body = { raw: tx, network };\n  return fetchFromHttp({\n    url: submitEndpoint,\n    method: \"POST\",\n    body\n  });\n}\n",
        "import { getBalance, getUtxos } from \"../../service\";\nimport { formatNumber } from \"../../utils\";\n\nexport const addAccount = account => ({\n  type: \"ADD_ACCOUNT\",\n  account\n});\n\nexport const updateAccountBalance = account => ({\n  type: \"UPDATE_ACCOUNT_BALANCE\",\n  account\n});\n\nexport const updateUtxos = (address, utxos) => ({\n  type: \"ADD_UTXO\",\n  address,\n  utxos\n});\n\nexport const generateMnemonic = () => ({ type: \"GENERATE_MNEMONIC\" });\n\nexport const setPageTitle = pageTitle => ({\n  type: \"SET_PAGE_TITLE\",\n  pageTitle\n});\n\nexport const setModal = ({ name, show, data }) => ({\n  type: \"SET_Modal\",\n  modal: { name, show, data }\n});\n\nexport const getAccountUtxos = (addr, network = \"testnet\") => {\n  return async dispatch => {\n    const res = await getUtxos(addr, network);\n    dispatch(updateUtxos(addr, res));\n  };\n};\n\nexport const setGoBack = goBack => ({\n  type: \"SET_GO_BACK\",\n  goBack\n});\n\nexport const setMenu = menu => ({\n  type: \"SET_MENU\",\n  menu\n});\n\nexport const getAllAccountBalance = () => {\n  return async function(dispatch, getState) {\n    const { accounts } = getState();\n    for (let account of accounts) {\n      updateBalance(account, dispatch);\n    }\n  };\n};\n\nexport const getAccountBalance = account => {\n  return async function(dispatch) {\n    await updateBalance(account, dispatch);\n  };\n};\n\nasync function updateBalance(account, dispatch) {\n  getBalance(account.address, account.network || \"testnet\").then((res = {}) => {\n    const findOne = {\n      ...account,\n      ...res,\n      balanceShow: formatNumber.toBtcPrecision(res.confirmed)\n    };\n    dispatch(updateAccountBalance(findOne));\n  });\n}\n\nexport const setNetwork = network => ({\n  type: \"SET_NETWORK\",\n  network\n});\n\nexport const setSeenWarning = () => ({\n  type: \"SET_SEEN_WARNING\",\n  seenWarning: true\n});\n\nexport const deleteAccount = address => ({\n  type: \"DELETE_ACCOUNT\",\n  address\n});\n",
        "import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport * as styles from \"./index.module.scss\";\nimport { setModal } from \"../../store/actions\";\nimport { Device } from \"../../utils\";\nimport classNames from \"classnames\";\n\nfunction Modal(props) {\n  const { title, children, className, closeCb } = props;\n\n  const { show } = useSelector(state => state.modal) || {};\n  const dispatch = useDispatch();\n\n  return (\n    show && (\n      <div\n        className={classNames(\n          styles.Modalcontainer,\n          Device.isMobile() ? styles.rootModalMobile : styles.rootModalDesktop\n        )}\n        id=\"rootModal\"\n      >\n        <div className={classNames(styles.content, className)}>\n          {title && (\n            <div\n              className={styles.header}\n              onClick={() => {\n                closeCb && closeCb();\n                dispatch(setModal({ show: false }));\n              }}\n            >\n              <div className={styles.title}>{title}</div>\n              <i className=\"iconfont iconClose\" />\n            </div>\n          )}\n          {children}\n        </div>\n      </div>\n    )\n  );\n}\n\nexport default Modal;\n",
        "import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { RouterGo } from \"../../components\";\nimport { PATH } from \"../../constants\";\nimport BitX from \"../../resources/Bitx.png\";\nimport * as styles from \"./SelectModeGetAccount.module.scss\";\nimport { setNetwork } from \"../../store/actions\";\n\nfunction SelectModeGetAccount(props) {\n  const [isCreate, setIsCreate] = useState(true);\n  const [openNetworkSelection, setOpenNetworkSelection] = useState(false);\n  const dispatch = useDispatch();\n\n  const { changeClose, accounts = [] } = props;\n\n  return (\n    <div className={styles.SelectModeGetAccount}>\n      {accounts.length ? (\n        <div className={styles.close} onClick={changeClose}>\n          <i className=\"iconfont iconClose\" style={{ cursor: \"pointer\" }} />\n        </div>\n      ) : null}\n\n      <div className={styles.bitx}>\n        <img alt=\"\" src={BitX} height={55} />\n      </div>\n      <div className={styles.routerbutton}>\n        <div>\n          <button\n            onClick={() => {\n              setIsCreate(true);\n              setOpenNetworkSelection(true);\n            }}\n          >\n            创建账户\n          </button>\n        </div>\n        <div>\n          <button\n            onClick={() => {\n              setIsCreate(false);\n              setOpenNetworkSelection(true);\n            }}\n          >\n            导入账户\n          </button>\n        </div>\n      </div>\n\n      {openNetworkSelection ? (\n        <section\n          className={styles.networkSelection}\n          onClick={() => setOpenNetworkSelection(false)}\n        >\n          <main onClick={event => event.stopPropagation()}>\n            <header>\n              <h3>选择网络</h3>\n              <span onClick={() => setOpenNetworkSelection(false)}>\n                <i\n                  className=\"iconfont iconClose\"\n                  style={{ cursor: \"pointer\" }}\n                />\n              </span>\n            </header>\n            <div>\n              <RouterGo\n                onClick={() => dispatch(setNetwork(\"mainnet\"))}\n                go={{\n                  pathname: isCreate ? PATH.createaccount : PATH.importaccount\n                }}\n              >\n                主网\n              </RouterGo>\n              <div className={styles.separator} />\n              <RouterGo\n                onClick={() => dispatch(setNetwork(\"testnet\"))}\n                go={{\n                  pathname: isCreate ? PATH.createaccount : PATH.importaccount\n                }}\n              >\n                测试网\n              </RouterGo>\n            </div>\n          </main>\n        </section>\n      ) : null}\n    </div>\n  );\n}\n\nexport default SelectModeGetAccount;\n",
        "import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { RouterGo } from \"../../components\";\nimport { setBlankSpace } from \"../../utils\";\nimport SelectModeGetAccount from \"./SelectModeGetAccount\";\nimport * as styles from \"./index.module.scss\";\nimport { PATH } from \"../../constants\";\nimport { getAllAccountBalance } from \"../../store/actions\";\n\nfunction AccountList(props) {\n  const [close, setClose] = useState((props.accounts || []).length > 0);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    props.setPageTitle(\"BitX\");\n  }, []);\n\n  useEffect(() => {\n    dispatch(getAllAccountBalance());\n  }, []);\n\n  return (\n    <div className={styles.AccountList}>\n      <div className={styles.listtitle}>\n        <div>账户列表</div>\n        <div onClick={() => setClose(!close)}>\n          <i className=\"iconfont iconadd\" style={{ cursor: \"pointer\" }} />\n        </div>\n      </div>\n      <ul>\n        {(props.accounts || []).map((item, index) => (\n          <RouterGo\n            key={index}\n            Ele=\"li\"\n            go={{\n              pathname: PATH.accountdetail,\n              search: `?address=${item.address}`\n            }}\n          >\n            <div className={styles.seperate} />\n            <div className={styles.desc}>\n              <div className={styles.title}>\n                <span className={styles.name}>{item.name}</span>\n                {item.network !== \"mainnet\" ? (\n                  <span className={styles.badge}>测试网</span>\n                ) : null}\n              </div>\n              <div className={styles.amount}>\n                {setBlankSpace(item.balanceShow, \"BTC\")}\n              </div>\n            </div>\n            <div className={styles.address}>{item.address}</div>\n          </RouterGo>\n        ))}\n      </ul>\n      {close ? null : (\n        <SelectModeGetAccount\n          {...props}\n          changeClose={() => {\n            setClose(!close);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default AccountList;\n",
        "import React from 'react';\nimport { Mixin } from '../../components';\nimport * as styles from './KnowAbout.module.scss';\n\nexport default class KnowAbout extends Mixin {\n  pageTitle = '备份助记词';\n  render() {\n    const { changeStep } = this.props;\n    return (\n      <div className={styles.KnowAbout}>\n        <i className=\"iconfont iconsuo\" />\n        <div className={styles.content}>\n          在BitX上生成或导入的助记词和私钥\n          <br />\n          由用户自己保管！平台方并无备份\n        </div>\n        <button onClick={() => changeStep(2)}>我已了解</button>\n      </div>\n    );\n  }\n}\n",
        "import React from 'react';\nimport { Mixin } from '../../components';\nimport * as styles from './SaveMnemonic.module.scss';\n\nexport default class SaveMnemonic extends Mixin {\n  render() {\n    const { mnemonic, changeStep } = this.props;\n    return (\n      <div className={styles.SaveMnemonic}>\n        <div className={styles.desc}>\n          请将以下12个单词记在纸上\n          <br />\n          我们会在之后进行验证\n        </div>\n        <div className={styles.generatewords}>{mnemonic}</div>\n        <button onClick={() => changeStep(3)}>我已备份</button>\n      </div>\n    );\n  }\n}\n",
        "import React from \"react\";\nimport classNames from \"classnames\";\nimport { Mixin } from \"../../components\";\nimport * as styles from \"./CheckMnemonic.module.scss\";\nimport { Patterns } from \"../../utils\";\n\nexport default class CheckMnemonic extends Mixin {\n  constructor(props) {\n    super(props);\n    const randomSort = (a, b) => {\n      return Math.random() > 0.5 ? -1 : 1;\n    };\n    this.state = {\n      userInput: [],\n      userInputErrMsg: \"\",\n      mnemonicSort: props.mnemonic.split(\" \").sort(randomSort)\n    };\n  }\n\n  checkAll = {\n    checkUserInput: () => {\n      const { userInput = [] } = this.state;\n      const { mnemonic } = this.props;\n      const err = Patterns.check(\"strictEqual\")(\n        userInput.map((item = {}) => item.value).join(\" \"),\n        mnemonic\n      );\n      this.setState({\n        userInputErrMsg: err\n      });\n      return err;\n    },\n    confirm: () => {\n      return [\"checkUserInput\"].every(item => !this.checkAll[item]());\n    }\n  };\n\n  render() {\n    const { checkAll } = this;\n    const { userInput, userInputErrMsg, mnemonicSort } = this.state;\n    const { changeStep } = this.props;\n\n    const getPostion = index =>\n      userInput.findIndex(item => item.index === index);\n    return (\n      <div className={styles.CheckMnemonic}>\n        <div className={styles.desc}>验证您记下的助记词</div>\n        <div className={styles.generatewords}>\n          {userInput.map((item = {}) => item.value).join(\" \")}\n        </div>\n        <div\n          className={classNames(\n            styles.writedesc,\n            userInputErrMsg && styles.warn\n          )}\n        >\n          请按正确的顺序点击单词\n        </div>\n        <ul className={styles.allwords}>\n          {mnemonicSort.map((item, index) => (\n            <li\n              className={getPostion(index) !== -1 ? styles.active : null}\n              key={index}\n              onClick={() => {\n                this.setState({\n                  userInputErrMsg: \"\"\n                });\n                if (getPostion(index) === -1) {\n                  this.setState(prevState => {\n                    prevState.userInput.push({\n                      value: item,\n                      index\n                    });\n                    return {\n                      userInput: prevState.userInput\n                    };\n                  });\n                } else {\n                  this.setState(prevState => {\n                    prevState.userInput.splice(getPostion(index), 1);\n                    return {\n                      userInput: prevState.userInput\n                    };\n                  });\n                }\n              }}\n            >\n              {item}\n            </li>\n          ))}\n        </ul>\n        <button\n          onClick={() => {\n            if (checkAll.confirm()) {\n              changeStep(4);\n            }\n          }}\n        >\n          完成\n        </button>\n      </div>\n    );\n  }\n}\n",
        "import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Mixin, Input } from \"../../components\";\nimport { PATH } from \"../../constants\";\nimport { bitJS, Patterns } from \"../../utils\";\nimport * as styles from \"./SetPassword.module.scss\";\nimport { addAccount } from \"../../store/actions\";\nimport bitcoin from \"bitcoinjs-lib\";\nimport passwordValidator from \"password-validator\";\n\nclass SetPassword extends Mixin {\n  pageTitle = \"设置密码\";\n  state = {\n    name: \"\",\n    nameErrMsg: \"\",\n    password: \"\",\n    passwordErrMsg: \"\",\n    confirmPassword: \"\",\n    confirmPasswordErrMsg: \"\"\n  };\n\n  checkAll = {\n    checkName: () => {\n      const { name } = this.state;\n      const err = Patterns.check(\"required\")(name);\n      this.setState({\n        nameErrMsg: err\n      });\n      return err;\n    },\n    checkPassword: () => {\n      const { password } = this.state;\n      let err =\n        Patterns.check(\"required\")(password) ||\n        Patterns.check(\"characterLength\")(password, 8) ||\n        this.checkAll.checkEqual();\n      this.setState({\n        passwordErrMsg: err\n      });\n\n      if (err) {\n        return true;\n      }\n\n      const schema = new passwordValidator()\n        .has()\n        .uppercase()\n        .has()\n        .lowercase()\n        .has()\n        .digits();\n      const errList = schema.validate(password, { list: true });\n      if (errList.length > 0) {\n        let msg;\n        switch (errList[0]) {\n          case \"uppercase\":\n            msg = \"密码需包含大写字母\";\n            break;\n          case \"lowercase\":\n            msg = \"密码需包含小写字母\";\n            break;\n          case \"digits\":\n            msg = \"密码需包含数字\";\n            break;\n          default:\n        }\n\n        if (msg) {\n          this.setState({\n            passwordErrMsg: msg\n          });\n          return true;\n        }\n      }\n\n      return false;\n    },\n    checkConfirmPassword: () => {\n      const { confirmPassword } = this.state;\n      let err =\n        Patterns.check(\"required\")(confirmPassword) ||\n        this.checkAll.checkEqual();\n      this.setState({\n        confirmPasswordErrMsg: err\n      });\n      return err;\n    },\n    checkEqual: () => {\n      const { password, confirmPassword } = this.state;\n      if (password && confirmPassword) {\n        const err = Patterns.check(\"equal\")(password, confirmPassword);\n        this.setState({\n          passwordErrMsg: err,\n          confirmPasswordErrMsg: err\n        });\n        return err;\n      }\n    },\n    confirm: () => {\n      return [\"checkName\", \"checkPassword\", \"checkConfirmPassword\"].every(\n        item => !this.checkAll[item]()\n      );\n    }\n  };\n\n  render() {\n    const { checkAll } = this;\n    const {\n      name,\n      nameErrMsg,\n      password,\n      passwordErrMsg,\n      confirmPassword,\n      confirmPasswordErrMsg\n    } = this.state;\n    const {\n      mnemonic,\n      privateKey,\n      addAccount,\n      history,\n      network: networkType\n    } = this.props;\n    const network =\n      networkType === \"mainnet\"\n        ? bitcoin.networks.bitcoin\n        : bitcoin.networks.testnet;\n\n    return (\n      <div className={styles.SetPassword}>\n        <div className={styles.inputcontent}>\n          <div className={styles.desc}>为你的钱包账户设置密码</div>\n          <Input\n            label=\"昵称\"\n            value={name}\n            errMsg={nameErrMsg}\n            placeholder=\"12字符以内\"\n            onBlur={checkAll.checkName}\n            onChange={value =>\n              this.setState({\n                nameErrMsg: \"\",\n                name: value.slice(0, 12)\n              })\n            }\n          />\n          <Input\n            isPassword\n            label=\"密码\"\n            value={password}\n            errMsg={passwordErrMsg}\n            placeholder=\"密码不少于8位，且包含大写字母、小写字母和数字\"\n            onBlur={checkAll.checkPassword}\n            onChange={value =>\n              this.setState({\n                passwordErrMsg: \"\",\n                password: value\n              })\n            }\n          />\n          <Input\n            isPassword\n            label=\"确认密码\"\n            value={confirmPassword}\n            errMsg={confirmPasswordErrMsg}\n            placeholder=\"重复输入密码\"\n            onBlur={checkAll.checkConfirmPassword}\n            onChange={value =>\n              this.setState({\n                confirmPasswordErrMsg: \"\",\n                confirmPassword: value\n              })\n            }\n          />\n        </div>\n        <div className={styles.button}>\n          <button\n            onClick={() => {\n              if (checkAll.confirm()) {\n                const account = bitJS.generateAccount(\n                  {\n                    name: name,\n                    mnemonic,\n                    wif: privateKey,\n                    password: password,\n                    network: networkType\n                  },\n                  network\n                );\n                addAccount(account);\n                history.push({\n                  pathname: PATH.home\n                });\n              }\n            }}\n          >\n            确定\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    network: state.network\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addAccount: account => {\n      dispatch(addAccount(account));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SetPassword);\n",
        "import React from \"react\";\nimport { Input, Mixin, Modal, RouterGo } from \"../../components\";\nimport { bitJS, isFunction, isString, Patterns } from \"../../utils\";\nimport * as styles from \"./SignModal.module.scss\";\n\nexport default class SignModal extends Mixin {\n  state = {\n    password: \"\",\n    passwordErrMsg: \"\",\n    status: false,\n    hash: \"\"\n  };\n\n  checkAll = {\n    checkPassword: () => {\n      const { password } = this.state;\n      const { currentAccount: { encryptedKey } = {} } = this.props;\n      let err =\n        Patterns.check(\"required\")(password) ||\n        bitJS.isValidPassword(encryptedKey, password);\n      this.setState({\n        passwordErrMsg: err\n      });\n      return err;\n    },\n    confirm: () => {\n      return [\"checkPassword\"].every(item => !this.checkAll[item]());\n    }\n  };\n\n  render() {\n    const { checkAll } = this;\n    const { password, passwordErrMsg, status, hash } = this.state;\n    const {\n      modal: { data: { callback } = {} } = {},\n      currentAccount: { encryptedKey, network } = {}\n    } = this.props;\n    const isTestnet = network !== \"mainnet\";\n\n    return (\n      <Modal title={status ? \"交易已广播\" : \"输入账户密码\"}>\n        {status ? (\n          <div className={styles.success}>\n            <i className=\"iconfont iconsuccess\" />\n            <div className={styles.button}>\n              <RouterGo\n                isOutSide\n                go={{\n                  pathname: `https://live.blockcypher.com/btc${\n                    isTestnet ? \"-testnet\" : \"\"\n                  }/tx/${hash}/`\n                }}\n              >\n                <button onClick={() => {}}>查看交易</button>\n              </RouterGo>\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className={styles.userInput}>\n              <Input\n                isPassword\n                value={password}\n                errMsg={passwordErrMsg}\n                onChange={value => {\n                  this.setState({\n                    passwordErrMsg: \"\",\n                    password: value\n                  });\n                }}\n                onBlur={checkAll.checkPassword}\n              />\n            </div>\n            <div className={styles.button}>\n              <button\n                onClick={async () => {\n                  if (checkAll.confirm()) {\n                    if (isFunction(callback)) {\n                      try {\n                        const res = await callback(encryptedKey, password);\n                        if (res) {\n                          this.setState({\n                            status: true,\n                            hash: res\n                          });\n                        }\n                      } catch (err) {\n                        console.log(err);\n                        const errMsg = isString(err)\n                          ? err\n                          : err.message && isString(err.message)\n                          ? err.message\n                          : err.message &&\n                            err.message.error &&\n                            isString(err.message.error)\n                          ? err.message.error\n                          : \"交易广播失败\";\n                        this.setState({\n                          passwordErrMsg: errMsg\n                        });\n                      }\n                    }\n                  }\n                }}\n              >\n                确定\n              </button>\n            </div>\n          </>\n        )}\n      </Modal>\n    );\n  }\n}\n",
        "import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Mixin } from \"../../components\";\nimport { bitJS } from \"../../utils\";\nimport KnowAbout from \"./KnowAbout\";\nimport SaveMnemonic from \"./SaveMnemonic\";\nimport CheckMnemonic from \"./CheckMnemonic\";\nimport { SetPassword } from \"../Components\";\nimport * as styles from \"./index.module.scss\";\n\nclass CreateAccount extends Mixin {\n  state = {\n    step: 1,\n    mnemonic: bitJS.generateMnemonic()\n  };\n\n  changeStep = step => {\n    this.changeState({\n      step\n    });\n  };\n  render() {\n    const { step, mnemonic } = this.state;\n\n    const props = {\n      ...this.props,\n      mnemonic,\n      changeStep: this.changeStep\n    };\n\n    return (\n      <div className={styles.CreateAccount}>\n        {step === 1 && <KnowAbout {...props} />}\n        {step === 2 && <SaveMnemonic {...props} />}\n        {step === 3 && <CheckMnemonic {...props} />}\n        {step === 4 && <SetPassword {...props} />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\n\nconst mapDispatchToProps = () => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateAccount);\n",
        "import React from \"react\";\nimport { Mixin } from \"../../components\";\nimport * as styles from \"./ImportMnemonicOrSecret.module.scss\";\nimport { Patterns } from \"../../utils\";\nimport { SetPassword } from \"../Components\";\n\nexport default class ImportMnemonic extends Mixin {\n  state = {\n    userInput: \"\",\n    userInputErrMsg: \"\"\n  };\n\n  checkAll = {\n    checkUserInput: () => {\n      const { userInput } = this.state;\n      const err =\n        Patterns.check(\"required\")(userInput) ||\n        Patterns.check(\"isValidMnemonic\")(userInput.trim());\n      this.setState({\n        userInputErrMsg: err\n      });\n      return err;\n    },\n    confirm: () => {\n      return [\"checkUserInput\"].every(item => !this.checkAll[item]());\n    }\n  };\n\n  render() {\n    const { checkAll } = this;\n    const { userInput, userInputErrMsg } = this.state;\n    const { changeStep, step } = this.props;\n    return (\n      <div className={styles.ImportMnemonic}>\n        {step === 1 && (\n          <>\n            <div className={styles.desc}>\n              请按正确顺序输入您的助记词\n              <br />\n              以空格键区分\n            </div>\n            <div className={styles.generatewords}>\n              <textarea\n                value={userInput}\n                onChange={e => {\n                  const value = e.target.value.replace(/\\s+/g, \" \");\n                  this.setState({\n                    userInputErrMsg: \"\",\n                    userInput: value\n                  });\n                }}\n              />\n            </div>\n            {userInputErrMsg && (\n              <div className={styles.errwarn}>{userInputErrMsg}</div>\n            )}\n\n            <button\n              onClick={() => {\n                if (checkAll.confirm()) {\n                  changeStep(2);\n                }\n              }}\n            >\n              导入\n            </button>\n          </>\n        )}\n        {step === 2 && (\n          <SetPassword {...this.props} mnemonic={userInput.trim()} />\n        )}\n      </div>\n    );\n  }\n}\n",
        "import React from \"react\";\nimport { Mixin } from \"../../components\";\nimport * as styles from \"./ImportMnemonicOrSecret.module.scss\";\nimport { Patterns } from \"../../utils\";\nimport { SetPassword } from \"../Components\";\nimport { connect } from \"react-redux\";\nimport bitcoin from \"bitcoinjs-lib\";\n\nclass ImportSecretKey extends Mixin {\n  state = {\n    userInput: \"\",\n    userInputErrMsg: \"\"\n  };\n\n  checkAll = {\n    checkUserInput: () => {\n      const { userInput = [] } = this.state;\n      const { network } = this.props;\n      const err =\n        Patterns.check(\"required\")(userInput) ||\n        Patterns.check(\"isValidPrivateKey\")(\n          userInput,\n          network === \"mainnet\"\n            ? bitcoin.networks.bitcoin\n            : bitcoin.networks.testnet\n        );\n      this.setState({\n        userInputErrMsg: err\n      });\n      return err;\n    },\n    confirm: () => {\n      return [\"checkUserInput\"].every(item => !this.checkAll[item]());\n    }\n  };\n\n  render() {\n    const { checkAll } = this;\n    const { userInput, userInputErrMsg } = this.state;\n    const { changeStep, step } = this.props;\n\n    return (\n      <div className={styles.ImportMnemonic}>\n        {step === 1 && (\n          <>\n            <div className={styles.desc}>请输入您的钱包私钥</div>\n            <div className={styles.generatewords}>\n              <textarea\n                value={userInput}\n                onChange={e => {\n                  const value = e.target.value;\n                  this.setState({\n                    userInputErrMsg: \"\",\n                    userInput: value\n                  });\n                }}\n              />\n            </div>\n            {userInputErrMsg && (\n              <div className={styles.errwarn}>{userInputErrMsg}</div>\n            )}\n\n            <button\n              onClick={() => {\n                if (checkAll.confirm()) {\n                  changeStep(2);\n                }\n              }}\n            >\n              导入\n            </button>\n          </>\n        )}\n        {step === 2 && (\n          <SetPassword {...this.props} privateKey={userInput.trim()} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    network: state.network\n  };\n};\n\nexport default connect(mapStateToProps)(ImportSecretKey);\n",
        "import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Mixin } from \"../../components\";\nimport ImportMnemonic from \"./ImportMnemonic\";\nimport ImportSecretKey from \"./ImportSecretKey\";\nimport * as styles from \"./index.module.scss\";\n\nclass ImportAccount extends Mixin {\n  pageTitle = \"导入账户\";\n  state = {\n    step: 1,\n    activeIndex: 0\n  };\n\n  changeStep = step => {\n    this.changeState({\n      step\n    });\n  };\n\n  render() {\n    const { step, activeIndex } = this.state;\n    const props = {\n      step,\n      changeStep: this.changeStep,\n      ...this.props\n    };\n    return (\n      <div className={styles.ImportAccount}>\n        {step === 1 && (\n          <ul className={styles.selectmode}>\n            {[\"导入助记词\", \"导入私钥\"].map((item, index) => (\n              <li\n                key={index}\n                className={activeIndex === index ? styles.active : null}\n                onClick={() => {\n                  this.setState({\n                    step: 1,\n                    activeIndex: index\n                  });\n                }}\n              >\n                {item}\n              </li>\n            ))}\n          </ul>\n        )}\n\n        {activeIndex === 0 && <ImportMnemonic {...props} />}\n        {activeIndex === 1 && <ImportSecretKey {...props} />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\n\nconst mapDispatchToProps = () => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportAccount);\n",
        "import React from \"react\";\nimport { Clipboard, RouterGo } from \"../../components\";\nimport * as styles from \"./AccountInfo.module.scss\";\n\nexport default function AccountInfo(props) {\n  const { currentAccount = {} } = props;\n  const isTestNet = currentAccount.network !== \"mainnet\";\n\n  return (\n    <div className={styles.AccountInfo}>\n      <div className={styles.amount}>\n        {currentAccount.balanceShow}\n        <span>BTC</span>\n      </div>\n      <div className={styles.address}>\n        <Clipboard>{currentAccount.address}</Clipboard>\n      </div>\n      <div className={styles.watchother}>\n        <RouterGo\n          isOutSide\n          go={{\n            pathname: `https://live.blockcypher.com/btc${\n              isTestNet ? \"-testnet\" : \"\"\n            }/address/${currentAccount.address}/`\n          }}\n        >\n          在浏览器中查看\n        </RouterGo>\n      </div>\n    </div>\n  );\n}\n",
        "import React from \"react\";\n\nexport default function ExportKey(props) {\n  return (\n    <div\n      className={props.className}\n      onClick={e => {\n        e.stopPropagation();\n        props.onClick();\n      }}\n    >\n      <i className=\"iconfont icondaochu\" />\n      <span>导出私钥</span>\n    </div>\n  );\n}\n",
        "import React from \"react\";\n\nexport default function(props) {\n  return (\n    <div\n      className={props.className}\n      style={{ display: \"flex\", alignItems: \"center\" }}\n      onClick={e => {\n        e.stopPropagation();\n        props.onClick();\n      }}\n    >\n      <i\n        className=\"iconfont iconbaseline-delete_forever-px\"\n        style={{ fontSize: \"26px\" }}\n      />\n      <span>删除账户</span>\n    </div>\n  );\n}\n",
        "import React, { useState } from \"react\";\nimport * as styles from \"./InputPassword.module.scss\";\nimport classnames from \"classnames\";\nimport { bitJS, Patterns } from \"../../utils\";\nimport { Input } from \"../../components\";\n\nexport default function InputPassword(props) {\n  const [password, setPassword] = useState(\"\");\n  const [errMsg, setErrMsg] = useState(\"\");\n\n  const checkPassword = function() {\n    const { currentAccount: { encryptedKey } = {} } = props;\n    let err =\n      Patterns.check(\"required\")(password) ||\n      bitJS.isValidPassword(encryptedKey, password);\n    setErrMsg(err);\n    return err;\n  };\n\n  return (\n    <div\n      className={classnames(props.className, styles.input_password)}\n      onClick={e => e.stopPropagation()}\n    >\n      <div className={styles.top}>\n        <span className={styles.title}>输入账户密码</span>\n        <i\n          className={classnames(\"iconfont iconClose\", styles.close)}\n          onClick={props.onClose}\n        />\n      </div>\n      <Input\n        className={styles.input}\n        isPassword\n        value={password}\n        errMsg={errMsg}\n        onChange={value => {\n          setPassword(value);\n          setErrMsg(\"\");\n        }}\n        onBlur={checkPassword}\n      />\n      <button\n        className={styles.confirm}\n        onClick={e => {\n          e.stopPropagation();\n          if (!checkPassword()) {\n            props.passwordCallback(password);\n          }\n        }}\n      >\n        确定\n      </button>\n    </div>\n  );\n}\n",
        "import React from \"react\";\n\nexport default function ViewPrivateKey({ privateKey, styles, onClose }) {\n  return (\n    <div onClick={e => e.stopPropagation()}>\n      <div className={styles.title}>\n        <span>私钥</span>\n        <i\n          className=\"iconfont iconClose\"\n          onClick={() => onClose()}\n          style={{\n            cursor: \"pointer\"\n          }}\n        />\n      </div>\n      <span className={styles.private_key}>{privateKey}</span>\n      <span className={styles.warning}>\n        不要将您的私钥存储在您的电脑上，或者网上某处。任何能够访问您备份私钥的人就能取用您的资金\n      </span>\n    </div>\n  );\n}\n",
        "import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Input, Mixin } from \"../../components\";\nimport { SignModal } from \"../Components\";\nimport * as styles from \"./AccountSend.module.scss\";\nimport { formatNumber, Patterns, bitJS } from \"../../utils\";\nimport { getAccountUtxos, setModal } from \"../../store/actions\";\nimport { enough } from \"../../components/Detail/bitcoin\";\nimport { broadcastTx } from \"../../service\";\n\nclass AccountSend extends Mixin {\n  state = {\n    address: \"\",\n    addressErrMsg: \"\",\n    amount: \"\",\n    amountErrMsg: \"\",\n    addOpReturn: false,\n    hex: \"\",\n    hexErrMsg: \"\",\n    fee: 0.00008, // 默认值为8000 Satoshi\n    feeErrMsg: \"\"\n  };\n\n  checkAll = {\n    checkAddress: () => {\n      const { address } = this.state;\n      const err =\n        Patterns.check(\"required\")(address) ||\n        Patterns.check(\"isBTCAddress\")(address);\n      this.setState({\n        addressErrMsg: err\n      });\n      return err;\n    },\n    checkAmount: () => {\n      const { amount } = this.state;\n      let err =\n        Patterns.check(\"required\")(amount) ||\n        Patterns.check(\"smallerOrEqual\")(0, amount, \"数量必须大于或等于0\");\n      if (!err) {\n        err = this.checkAll.checkAmountAndFee();\n      } else {\n        this.setState({\n          amountErrMsg: err\n        });\n      }\n      return err;\n    },\n    checkFee: () => {\n      const { fee } = this.state;\n      let err =\n        Patterns.check(\"required\")(fee) ||\n        Patterns.check(\"smallerOrEqual\")(0, fee, \"数量必须大于或等于0\");\n      if (!err) {\n        err = this.checkAll.checkAmountAndFee();\n      } else {\n        this.setState({\n          feeErrMsg: err\n        });\n      }\n      return err;\n    },\n    checkAmountAndFee: () => {\n      const { fee, amount } = this.state;\n      const { utxos } = this.props;\n      const BTCAmount = Number(formatNumber.toBtcPrecision(amount, 8, true));\n      const feeInSatoshi = Number(formatNumber.toBtcPrecision(fee, 8, true));\n      if (!enough(utxos, BTCAmount, feeInSatoshi)) {\n        const errMsg = \"数量不足\";\n        this.setState({\n          feeErrMsg: errMsg,\n          amountErrMsg: errMsg\n        });\n        return errMsg;\n      }\n      this.setState({\n        feeErrMsg: \"\",\n        amountErrMsg: \"\"\n      });\n    },\n    checkHex: () => {\n      const { hex, addOpReturn } = this.state;\n      const err = addOpReturn ? Patterns.check(\"required\")(hex) : \"\";\n      this.setState({\n        hexErrMsg: err\n      });\n      return err;\n    },\n    confirm: () => {\n      return [\"checkAddress\", \"checkAmount\", \"checkFee\", \"checkHex\"].every(\n        item => !this.checkAll[item]()\n      );\n    }\n  };\n\n  startInit = () => {\n    const { getAccountUtxos, currentAccount } = this.props;\n    getAccountUtxos(currentAccount.address, currentAccount.network);\n  };\n\n  constructTx(encryptedKey, password) {\n    const { address, amount, hex, fee } = this.state;\n    const { utxos } = this.props;\n    const { currentAccount } = this.props;\n    const BTCAmount = Number(formatNumber.toBtcPrecision(amount, 8, true));\n    const feeInSatoshi = Number(formatNumber.toBtcPrecision(fee, 8, true));\n\n    return bitJS.sign(\n      utxos,\n      currentAccount.address,\n      address,\n      BTCAmount,\n      feeInSatoshi,\n      hex,\n      encryptedKey,\n      password,\n      currentAccount.network\n    );\n  }\n\n  render() {\n    const { checkAll } = this;\n    const {\n      address,\n      addressErrMsg,\n      amount,\n      amountErrMsg,\n      addOpReturn,\n      hex,\n      hexErrMsg,\n      fee,\n      feeErrMsg\n    } = this.state;\n\n    const { currentAccount } = this.props;\n\n    const hexToAscii = str => {\n      if (!/^(0x)?[\\da-fA-F]+$/.test(str)) {\n        return \"\";\n      }\n      const hexString = str.startsWith(\"0x\") ? str.substring(2) : str;\n      if (hexString.length % 2 === 1) {\n        return \"\";\n      }\n\n      let strOut = \"\";\n      for (let x = 0; x < hexString.length; x += 2) {\n        strOut += String.fromCharCode(parseInt(hexString.substr(x, 2), 16));\n      }\n      return strOut;\n    };\n\n    const ASCII = hexToAscii(hex);\n    const { modal: { name } = {} } = this.props;\n    return (\n      <div className={styles.AccountSend}>\n        <div className={styles.userInput}>\n          <Input\n            errMsg={addressErrMsg}\n            label=\"接收人地址\"\n            value={address}\n            onBlur={checkAll.checkAddress}\n            onChange={value => {\n              this.setState({\n                address: value\n              });\n            }}\n          />\n          <Input\n            errMsg={amountErrMsg}\n            label=\"转账数量\"\n            value={amount}\n            suffix={\"BTC\"}\n            onBlur={checkAll.checkAmount}\n            onChange={value => {\n              this.setState({\n                amount: value\n              });\n            }}\n          />\n          <Input\n            errMsg={feeErrMsg}\n            label=\"交易手续费\"\n            value={fee}\n            suffix={\"BTC\"}\n            onBlur={checkAll.checkFee}\n            onChange={value => {\n              this.setState({\n                fee: value\n              });\n            }}\n          />\n          <p className={styles.warning}>\n            请参考市场手续费填写，否则您将面临支付过多手续费或者您的交易永远不会被确认的风险。\n          </p>\n        </div>\n        <div className={styles.addreturn}>\n          添加OP_RETURN\n          {addOpReturn ? (\n            <i\n              onClick={() => {\n                this.setState({\n                  addOpReturn: !addOpReturn\n                });\n              }}\n              className=\"iconfont iconopen\"\n              style={{ color: \"#F6C94A\" }}\n            />\n          ) : (\n            <i\n              onClick={() => {\n                this.setState({\n                  addOpReturn: !addOpReturn\n                });\n              }}\n              className=\"iconfont iconclose\"\n              style={{ color: \"rgba(34,31,31,0.26)\" }}\n            />\n          )}\n        </div>\n        {addOpReturn && (\n          <div className={styles.returncontent}>\n            <div className={styles.input}>\n              <Input\n                rows={2}\n                isTextArea\n                errMsg={hexErrMsg}\n                label=\"16进制 Hex\"\n                value={hex}\n                onBlur={checkAll.checkHex}\n                onChange={value => {\n                  this.setState({\n                    hex: value\n                  });\n                }}\n              />\n            </div>\n            <div className={styles.ASCII}>\n              <div className={styles.label}>文本 ASCII</div>\n              <div>{ASCII}</div>\n            </div>\n          </div>\n        )}\n\n        <div className={styles.button}>\n          <button\n            onClick={() => {\n              if (checkAll.confirm()) {\n                this.props.openModal({\n                  name: \"transfer\",\n                  data: {\n                    callback: async (encryptedKey, password) => {\n                      const tx = this.constructTx(encryptedKey, password);\n                      if (tx && tx.message) {\n                        throw Error(tx.message);\n                      } else {\n                        const res = await broadcastTx(\n                          tx,\n                          currentAccount.network\n                        );\n                        if (res && res.tx) {\n                          return res.tx;\n                        }\n                      }\n                    }\n                  }\n                });\n              }\n            }}\n          >\n            确定\n          </button>\n        </div>\n\n        {name === \"transfer\" && <SignModal {...this.props} />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  const { address } = props.currentAccount || {};\n  const target = state.utxos.find(item => item.address === address);\n  return { utxos: target ? target.utxos : [] };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAccountUtxos: (address, network) =>\n      dispatch(getAccountUtxos(address, network)),\n    openModal: ({ name, data }) => {\n      dispatch(\n        setModal({\n          name,\n          data,\n          show: true\n        })\n      );\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AccountSend);\n",
        "import React, { useEffect, useRef } from \"react\";\nimport QRious from \"qrious\";\nimport * as styles from \"./AccountReceive.module.scss\";\n\nexport default function AccountAccept(props) {\n  const element = useRef(null);\n  const { currentAccount } = props;\n\n  useEffect(() => {\n    new QRious({\n      size: 190,\n      element: element.current,\n      value: currentAccount.address\n    });\n  }, []);\n\n  return (\n    <div className={styles.AccountReceive}>\n      <canvas ref={element} />\n      <div className={styles.desc}>地址二维码</div>\n    </div>\n  );\n}\n",
        "import React, { useState } from \"react\";\nimport * as styles from \"./index.module.scss\";\nimport AccountSend from \"./AccountSend\";\nimport AccountReceive from \"./AccountReceive\";\n\nexport default function OperationSwitch(props) {\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  return (\n    <div\n      className={styles.content}\n      style={{ background: activeIndex === 1 ? \"white\" : \"\" }}\n    >\n      <ul className={styles.selectmode}>\n        {[\"发送\", \"接收\"].map((item, index) => (\n          <li\n            key={index}\n            className={activeIndex === index ? styles.active : null}\n            onClick={() => setActiveIndex(index)}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n      {activeIndex === 0 && <AccountSend {...props} />}\n      {activeIndex === 1 && <AccountReceive {...props} />}\n    </div>\n  );\n}\n",
        "import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Mixin } from \"../../components\";\nimport AccountInfo from \"./AccountInfo\";\nimport ExportKey from \"./ExportKey\";\nimport DeleteAccount from \"./DeleteAccount\";\nimport InputPassword from \"./InputPassword\";\nimport ViewPrivateKey from \"./ViewPrivateKey\";\nimport { deleteAccount, getAccountBalance, setMenu } from \"../../store/actions\";\nimport * as styles from \"./index.module.scss\";\nimport { bitX } from \"../../utils/bitX\";\nimport { isFunction } from \"../../utils\";\nimport OperationSwitch from \"./SendOrReceive\";\n\nclass AccountDetail extends Mixin {\n  constructor(props) {\n    super(props);\n    const { currentAccount } = props;\n    this.pageTitle = currentAccount.name;\n    this.didMount = Mixin.prototype.componentDidMount;\n    this.state = {\n      showMenu: false,\n      status: \"toExportKey\", //\"toExportKey\": 导出私钥; \"inputPassword\": 输入密码; \"showPrivateKey\":展示私钥\n      privateKey: \"\",\n      passwordCallback: () => {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.didMount) {\n      this.didMount.apply(this);\n    }\n\n    this.props.setMenu({\n      show: true,\n      cb: () => {\n        this.setState({ showMenu: true });\n      }\n    });\n\n    const { currentAccount = {} } = this.props;\n    this.props.getAccountBalance(currentAccount);\n  }\n\n  handleStepChange(status) {\n    this.setState({ status });\n  }\n\n  render() {\n    const { status, showMenu, privateKey, passwordCallback } = this.state;\n    const { currentAccount: { encryptedKey } = {}, deleteAccount } = this.props;\n\n    return (\n      <div className={styles.AccountDetail}>\n        <AccountInfo {...this.props} />\n        <OperationSwitch {...this.props} />\n        {showMenu && (\n          <div\n            className={styles.modalWrapper}\n            onClick={() => {\n              this.setState({ showMenu: false, status: \"toExportKey\" });\n            }}\n          >\n            {status === \"toExportKey\" && (\n              <div className={styles.menu}>\n                <ExportKey\n                  className={styles.export_key}\n                  onClick={() => {\n                    this.setState({\n                      status: \"inputPassword\",\n                      passwordCallback: password => {\n                        const { privateKey } = bitX.decryptPair(\n                          encryptedKey,\n                          password\n                        );\n                        this.setState({\n                          privateKey: privateKey.toString(\"hex\"),\n                          status: \"showPrivateKey\"\n                        });\n                      }\n                    });\n                  }}\n                />\n                <DeleteAccount\n                  onClick={() => {\n                    this.setState({\n                      status: \"inputPassword\",\n                      passwordCallback: () => {\n                        deleteAccount(this.props.currentAccount.address);\n\n                        if (isFunction(this.props.goBack)) {\n                          this.props.goBack();\n                        } else {\n                          this.props.history.goBack();\n                        }\n                      }\n                    });\n                  }}\n                  className={styles.export_key}\n                />\n              </div>\n            )}\n            {status === \"inputPassword\" && (\n              <div className={styles.menu}>\n                <InputPassword\n                  {...this.props}\n                  onClose={() => {\n                    this.setState({ showMenu: false, status: \"toExportKey\" });\n                  }}\n                  passwordCallback={passwordCallback}\n                  setPrivateKey={privateKey =>\n                    this.setState({ privateKey, status: \"showPrivateKey\" })\n                  }\n                />\n              </div>\n            )}\n            {status === \"showPrivateKey\" && (\n              <div className={styles.menu}>\n                <ViewPrivateKey\n                  styles={styles}\n                  privateKey={privateKey}\n                  onClose={() => {\n                    this.setState({ showMenu: false, status: \"toExportKey\" });\n                  }}\n                />\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    this.props.setMenu({\n      show: false,\n      cb: null\n    });\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    menu: state.menu,\n    accounts: state.accounts\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMenu: menu => dispatch(setMenu(menu)),\n    deleteAccount: address => dispatch(deleteAccount(address)),\n    getAccountBalance: account => dispatch(getAccountBalance(account))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AccountDetail);\n",
        "import { PATH } from '../../constants';\nimport AccountList from '../AccountList';\nimport CreateAccount from '../CreateAccount';\nimport ImportAccount from '../ImportAccount';\nimport AccountDetail from '../AccountDetail';\n\nexport default [\n  {\n    component: AccountList,\n    path: PATH.home,\n    title: 'BitX',\n  },\n  {\n    component: CreateAccount,\n    path: PATH.createaccount,\n    title: '',\n  },\n  {\n    component: ImportAccount,\n    path: PATH.importaccount,\n    title: '',\n  },\n  {\n    component: AccountDetail,\n    path: PATH.accountdetail,\n    title: '',\n  },\n];\n",
        "import React from \"react\";\nimport * as styles from \"./warning.module.scss\";\n\nexport default function(props) {\n  return (\n    <div className={styles.wrapper}>\n      <main>\n        <h3>用户须知</h3>\n        <p>\n          BitX只作为跨链充值ChainX钱包的中转钱包使用，不建议用户使用BitX钱包存储BTC；也不建议用户导入其他钱包的私钥到BitX中。\n        </p>\n        <button onClick={props.setSeen}>我已了解</button>\n      </main>\n    </div>\n  );\n}\n",
        "import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport * as styles from \"./Header.module.scss\";\nimport { PATH } from \"../../../constants\";\nimport { isFunction } from \"../../../utils\";\nimport classnames from \"classnames\";\n\nexport default function Header(props) {\n  const {\n    history,\n    history: {\n      location: { pathname }\n    }\n  } = props;\n\n  const { show: showMenu, cb } = useSelector(state => state.menu);\n  const goBack = useSelector(state => state.goBack);\n  const showBack = pathname !== PATH.home;\n\n  const goBackMenu = showBack && (\n    <i\n      className={classnames(\"iconfont iconback1\", styles.back)}\n      onClick={() => {\n        if (isFunction(goBack)) {\n          goBack();\n        } else {\n          history.goBack();\n        }\n      }}\n    />\n  );\n\n  const menu = showMenu && (\n    <i\n      className={classnames(\"iconfont iconmore\", styles.menu)}\n      onClick={() => cb()}\n    />\n  );\n\n  return (\n    <div className={styles.Header}>\n      {goBackMenu}\n      {props.children}\n      {menu}\n    </div>\n  );\n}\n",
        "import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport routers from \"../routers\";\nimport Warning from \"./Warning\";\nimport Header from \"./Header\";\nimport * as styles from \"./index.module.scss\";\nimport {\n  setPageTitle,\n  setModal,\n  getAllAccountBalance,\n  setGoBack,\n  setSeenWarning\n} from \"../../../store/actions\";\nimport { PATH } from \"../../../constants\";\nimport { bitJS, parseQueryString } from \"../../../utils\";\n\nclass CommonLayOut extends Component {\n  componentDidMount() {\n    bitJS.update();\n  }\n\n  render() {\n    const {\n      accounts = [],\n      pageTitle,\n      history: { location: { search } = {} },\n      app,\n      setSeenWarning\n    } = this.props;\n\n    let currentAccount = {};\n    const address = parseQueryString(search).address;\n    if (address) {\n      currentAccount =\n        accounts.filter((item = {}) => item.address === address)[0] || {};\n    }\n\n    return (\n      <div className={styles.CommonLayOut}>\n        <div className={styles.header}>\n          <Header {...this.props}>{pageTitle}</Header>\n        </div>\n        <div className={styles.content}>\n          <Switch>\n            {routers.map((item, index) => (\n              <Route\n                exact\n                key={index}\n                path={item.path}\n                render={props => (\n                  <item.component\n                    {...props}\n                    {...this.props}\n                    currentAccount={currentAccount}\n                  />\n                )}\n              />\n            ))}\n            <Redirect to={PATH.home} />\n          </Switch>\n        </div>\n        {!app.seenWarning && <Warning setSeen={setSeenWarning} />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    goBack: state.goBack,\n    accounts: state.accounts,\n    pageTitle: state.pageTitle,\n    modal: state.modal,\n    menu: state.menu,\n    app: state.app\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPageTitle: title => dispatch(setPageTitle(title)),\n    setModal: ({ name, show, data }) =>\n      dispatch(setModal({ name, show, data })),\n    getAllAccountBalance: () => dispatch(getAllAccountBalance()),\n    setGoBack: goBack => dispatch(setGoBack(goBack)),\n    setSeenWarning: () => dispatch(setSeenWarning())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CommonLayOut);\n",
        "import React, { useEffect } from \"react\";\nimport { BrowserRouter, HashRouter, Route, Switch } from \"react-router-dom\";\nimport CommonLayOut from \"./CommonLayOut\";\nimport { Device, ipc } from \"../../utils\";\n\nimport \"./index.module.scss\";\n\nfunction App(appProps) {\n  useEffect(() => {\n    if (Device.isMobile()) {\n      document.getElementById(\"root\").setAttribute(\"class\", \"root-mobile\");\n    } else {\n      document.getElementById(\"root\").setAttribute(\"class\", \"root-desktop\");\n    }\n  }, []);\n\n  const Router = ipc ? HashRouter : BrowserRouter;\n  return (\n    <Router>\n      <Switch>\n        <Route\n          path=\"/\"\n          render={props => <CommonLayOut {...props} {...appProps} />}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n",
        "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n",
        "import { localSave, bitJS } from \"../../utils\";\n\nlet initialAccounts = bitJS.getAccount();\nif (!initialAccounts || !Array.isArray(initialAccounts)) {\n  initialAccounts = [];\n}\n\nconst accountVersion = localSave.get(\"accountVersion\");\nif (typeof accountVersion === \"undefined\") {\n  localSave.set(\"accountVersion\", 1);\n}\n\nfunction saveAccounts(rawAccounts) {\n  const saveParts = rawAccounts.map((item = {}) => ({\n    name: item.name,\n    address: item.address,\n    encryptedKey: item.encryptedKey,\n    network: item.network\n  }));\n\n  bitJS.saveAccount(saveParts);\n}\n\nconst accounts = (state = initialAccounts, action) => {\n  if (action.type === \"ADD_ACCOUNT\") {\n    const result = [...state, action.account];\n    saveAccounts(result);\n    return result;\n  } else if (action.type === \"DELETE_ACCOUNT\") {\n    const index = state.findIndex(\n      account => account.address === action.address\n    );\n    if (index < 0) {\n      return state;\n    }\n\n    state.splice(index, 1);\n    saveAccounts(state);\n    return state;\n  } else if (action.type === \"UPDATE_ACCOUNT_BALANCE\") {\n    return state.map(item => {\n      if (item.address === action.account.address) {\n        return action.account;\n      }\n      return item;\n    });\n  }\n\n  return state;\n};\n\nexport default accounts;\n",
        "import bip39 from 'bip39';\n\nconst mnemonic = (state = [], action) => {\n  if (action.type === 'GENERATE_MNEMONIC') {\n    const mnemonic = bip39.generateMnemonic();\n    return mnemonic.split(' ');\n  } else if (action.type === 'GENERATE_MNEMONIC') {\n    return [];\n  }\n  return state;\n};\n\nexport default mnemonic;\n",
        "const utxos = (state = [], action) => {\n  if (action.type === \"ADD_UTXO\") {\n    const index = state.findIndex(item => item.address === action.address);\n    if (index < 0) {\n      return [{ utxos: action.utxos, address: action.address }, ...state];\n    } else {\n      const clone = [...state];\n      clone.splice(index, 1, { utxos: action.utxos, address: action.address });\n      return clone;\n    }\n  }\n  return state;\n};\n\nexport default utxos;\n",
        "const pageTitle = (state = [], action) => {\n  if (action.type === 'SET_PAGE_TITLE') {\n    return action.pageTitle;\n  }\n  return state;\n};\n\nexport default pageTitle;\n",
        "const modal = (state = { name: '', show: false }, action = {}) => {\n  if (action.type === 'SET_Modal') {\n    return {\n      ...state,\n      ...action.modal,\n    };\n  }\n  return state;\n};\n\nexport default modal;\n",
        "const goBack = (state = '', action) => {\n  if (action.type === 'SET_GO_BACK') {\n    return action.goBack;\n  }\n  return state;\n};\n\nexport default goBack;\n",
        "const network = (state = \"testnet\", action) => {\n  if (action.type === \"SET_NETWORK\") {\n    return action.network;\n  }\n  return state;\n};\n\nexport default network;\n",
        "const menu = (state = { show: false, cb: null }, action) => {\n  if (action.type === \"SET_MENU\") {\n    return action.menu;\n  }\n  return state;\n};\n\nexport default menu;\n",
        "import { localSave } from \"../../utils\";\n\nconst appData = localSave.get(\"appData\") || {};\n\nconst app = (state = appData, action) => {\n  if (action.type === \"SET_SEEN_WARNING\") {\n    const result = {\n      ...state,\n      seenWarning: action.seenWarning\n    };\n    localSave.set(\"appData\", result);\n\n    return result;\n  }\n\n  return state;\n};\n\nexport default app;\n",
        "import { combineReducers } from \"redux\";\nimport accounts from \"./reducers/account\";\nimport newMnemonic from \"./reducers/mnemonic\";\nimport utxos from \"./reducers/utxo\";\nimport pageTitle from \"./reducers/pageTitle\";\nimport modal from \"./reducers/modal\";\nimport goBack from \"./reducers/goBack\";\nimport network from \"./reducers/network\";\nimport menu from \"./reducers/menu\";\nimport app from \"./reducers/app\";\n\nexport default combineReducers({\n  accounts,\n  network,\n  newMnemonic,\n  utxos,\n  pageTitle,\n  modal,\n  goBack,\n  menu,\n  app\n});\n",
        "import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport initReactFastclick from \"react-fastclick\";\nimport \"normalize.css\";\nimport \"./index.scss\";\nimport App from \"./routes/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store\";\nimport \"whatwg-fetch\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\ninitReactFastclick();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Input_container__io0rI\",\"label\":\"Input_label__wm9as\",\"content\":\"Input_content__3J-eI\",\"input\":\"Input_input__38Ld3\",\"suffix\":\"Input_suffix__58Mod\",\"errMsg\":\"Input_errMsg__3Knym\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckMnemonic\":\"CheckMnemonic_CheckMnemonic__2PmdU\",\"desc\":\"CheckMnemonic_desc__3r_mQ\",\"generatewords\":\"CheckMnemonic_generatewords__31FMN\",\"writedesc\":\"CheckMnemonic_writedesc__2P-BI\",\"warn\":\"CheckMnemonic_warn__2gOUn\",\"allwords\":\"CheckMnemonic_allwords__2XNEx\",\"active\":\"CheckMnemonic_active__3qQQH\"};",
        "import bip39 from \"bip39\";\nimport bip32 from \"bip32\";\nimport bip38 from \"bip38\";\nimport bitcoin from \"bitcoinjs-lib\";\nimport { compose } from \"../components/Detail/bitcoin\";\n\nfunction getNetworkKey(network) {\n  if (network === bitcoin.networks.bitcoin) {\n    return \"mainnet\";\n  } else if (network === bitcoin.networks.testnet) {\n    return \"testnet\";\n  } else {\n    return \"\";\n  }\n}\n\nexport const bitX = {\n  generateMnemonic: () => bip39.generateMnemonic(),\n  generateAccount: (\n    { name, mnemonic, password, wif },\n    network = bitcoin.networks.testnet\n  ) => {\n    let account;\n    let path = \"m/44'/1'/0'/0/0\";\n    if (network === bitcoin.networks.bitcoin) {\n      path = \"m/44'/0'/0'/0/0\";\n    }\n    const params = {\n      N: 128, // specified by BIP38\n      r: 8,\n      p: 8\n    };\n    if (name && mnemonic && password) {\n      const seed = bip39.mnemonicToSeed(mnemonic);\n      const root = bip32.fromSeed(seed, network);\n      const child1 = root.derivePath(path);\n      const p2pkh = bitcoin.payments.p2pkh({\n        pubkey: child1.publicKey,\n        network\n      });\n      const encryptedKey = bip38.encrypt(\n        child1.privateKey,\n        true,\n        password,\n        null,\n        params\n      );\n      account = {\n        name,\n        address: p2pkh.address,\n        encryptedKey,\n        network: getNetworkKey(network)\n      };\n    } else if (name && wif && password) {\n      let keyPair;\n      if (/^(0x)?[\\da-zA-Z]{64}$/.test(wif)) {\n        keyPair = bitcoin.ECPair.fromPrivateKey(Buffer.from(wif, \"hex\"), {\n          network\n        });\n      } else {\n        keyPair = bitcoin.ECPair.fromWIF(wif, network);\n      }\n      const { address } = bitcoin.payments.p2pkh({\n        pubkey: keyPair.publicKey,\n        network\n      });\n      const encryptedKey = bip38.encrypt(\n        keyPair.privateKey,\n        keyPair.compressed,\n        password,\n        null,\n        params\n      );\n      account = {\n        name,\n        address,\n        encryptedKey,\n        network: getNetworkKey(network)\n      };\n    }\n    return account;\n  },\n  decrypt: (encryptedKey, password) => {\n    return bip38.decrypt(encryptedKey, password, () => {}, {\n      N: 128,\n      r: 8,\n      p: 8\n    });\n  },\n  decryptPair: (encryptedKey, password, network = bitcoin.networks.testnet) => {\n    const result = bitX.decrypt(encryptedKey, password);\n    return bitcoin.ECPair.fromPrivateKey(result.privateKey, {\n      compressed: result.compressed,\n      network\n    });\n  },\n  sign: (\n    utxos,\n    changeAddress,\n    targetAddress,\n    amount,\n    fee,\n    opReturnHex,\n    encryptedKey,\n    password,\n    network = \"mainnet\"\n  ) => {\n    network =\n      network === \"mainnet\"\n        ? bitcoin.networks.bitcoin\n        : bitcoin.networks.testnet;\n    const ecpair = bitX.decryptPair(encryptedKey, password, network);\n    return compose(\n      utxos,\n      changeAddress,\n      targetAddress,\n      amount,\n      fee,\n      opReturnHex,\n      ecpair,\n      network\n    );\n  }\n};\n",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modalcontainer\":\"Modal_Modalcontainer__1-1i6\",\"rootModalDesktop\":\"Modal_rootModalDesktop__1q3ON\",\"content\":\"Modal_content__NqUgg\",\"header\":\"Modal_header__2JJ9S\",\"title\":\"Modal_title__tK9-d\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectModeGetAccount\":\"SelectModeGetAccount_SelectModeGetAccount__2tlmP\",\"close\":\"SelectModeGetAccount_close__dKjrK\",\"bitx\":\"SelectModeGetAccount_bitx__3pKTR\",\"routerbutton\":\"SelectModeGetAccount_routerbutton__3UWJV\",\"networkSelection\":\"SelectModeGetAccount_networkSelection__2JYcJ\",\"separator\":\"SelectModeGetAccount_separator__36AmM\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_password\":\"InputPassword_input_password__xHtXz\",\"top\":\"InputPassword_top__G92ug\",\"title\":\"InputPassword_title__3_ocN\",\"close\":\"InputPassword_close__K_nj7\",\"input\":\"InputPassword_input__k0YnT\",\"confirm\":\"InputPassword_confirm__B83Pv\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"tool\":\"Tooltip_tool__1CxeX\",\"large\":\"Tooltip_large__rLp1V\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"SetPassword\":\"SetPassword_SetPassword__3XwEv\",\"inputcontent\":\"SetPassword_inputcontent__1aACH\",\"desc\":\"SetPassword_desc__3ZVMp\",\"button\":\"SetPassword_button__1G1mm\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"success\":\"SignModal_success__3vCKm\",\"button\":\"SignModal_button__1kWfr\",\"userInput\":\"SignModal_userInput__ljZ7i\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccountInfo\":\"AccountInfo_AccountInfo__13Hon\",\"amount\":\"AccountInfo_amount__3cznI\",\"address\":\"AccountInfo_address__2mibn\",\"watchother\":\"AccountInfo_watchother__RHieT\"};",
        "import BigNumber from \"bignumber.js\";\nimport bitcoin from \"bitcoinjs-lib\";\n\nexport function enough(utxos, amount, fee) {\n  const total = utxos.reduce((result, utxo) => result + utxo.value, 0);\n\n  return total >= amount + fee;\n}\n\nfunction filterUnspentsByAmount(unspents, amount, fee) {\n  const nonZeroUnspents = unspents.filter(\n    utxo => new BigNumber(utxo.value) > 0\n  );\n\n  const result = [];\n  let sum = 0;\n  for (let utxo of nonZeroUnspents) {\n    result.push(utxo);\n    sum += utxo.value;\n    if (sum >= amount + fee) {\n      break;\n    }\n  }\n\n  return sum >= amount + fee ? result : [];\n}\n\nexport function compose(\n  utxos,\n  changeAddress,\n  targetAddress,\n  amount,\n  fee,\n  opReturnHex,\n  ecpair,\n  network = bitcoin.networks.testnet\n) {\n  const filteredUtxos = filterUnspentsByAmount(utxos, amount, fee);\n\n  const txb = new bitcoin.TransactionBuilder(network);\n  txb.setVersion(1);\n\n  let sum = 0;\n  for (let utxo of filteredUtxos) {\n    txb.addInput(utxo.mintTxid, utxo.mintIndex, 0);\n    sum += utxo.value;\n  }\n\n  txb.addOutput(targetAddress, amount);\n  const change = sum - amount - fee;\n  if (change > 1000) {\n    txb.addOutput(changeAddress, change);\n  }\n\n  if (opReturnHex) {\n    const embed = bitcoin.payments.embed({\n      data: [Buffer.from(opReturnHex, \"hex\")]\n    });\n    txb.addOutput(embed.output, 0);\n  }\n\n  filteredUtxos.forEach((utxo, index) => {\n    txb.sign(index, ecpair);\n  });\n\n  const tx = txb.build();\n  return tx.toHex();\n}\n\nexport default compose;\n",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"clipboard\":\"Clipboard_clipboard__3NJHh\",\"children\":\"Clipboard_children__2QF2s\",\"ellipse\":\"Clipboard_ellipse__2fy2X\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"SaveMnemonic\":\"SaveMnemonic_SaveMnemonic__3U0v-\",\"desc\":\"SaveMnemonic_desc__3l6VF\",\"generatewords\":\"SaveMnemonic_generatewords__AJdtz\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImportAccount\":\"ImportAccount_ImportAccount__1j0yl\",\"selectmode\":\"ImportAccount_selectmode__1Nurw\",\"active\":\"ImportAccount_active__ffKXC\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2CI_T\",\"back\":\"Header_back__3QuoP\",\"menu\":\"Header_menu__1gycx\"};",
        "// extracted by mini-css-extract-plugin\nmodule.exports = {\"CommonLayOut\":\"CommonLayOut_CommonLayOut__3AODs\",\"content\":\"CommonLayOut_content__1-0gL\"};"
    ],
    "sourceRoot": ""
}